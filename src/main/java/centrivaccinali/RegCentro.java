/*
    Limiti Luca 738873 (sede VA)
    Zehhaf Ishak 737763 (sede VA)
    Ferro Paolo 737529 (sede VA)
    Casolo Ginelli Loris 737056 (sede VA)
 */

package centrivaccinali;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import serverCV.serverCVInterface;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.sql.SQLException;

/**
 * Classe per registrare un nuovo centro vaccinale
 */
public class RegCentro {
    private JFrame cenFrame;
    private JTextField nome;
    private JTextField com;
    private JTextField qual;
    private JTextField ind;
    private JTextField nc;
    private JTextField prov;
    private JTextField capT;
    private JRadioButton hubRadioButton;
    private JRadioButton aziendaleRadioButton;
    private JRadioButton ospedalieroRadioButton;
    private ButtonGroup buttonGroup;
    private JButton registraButton;
    private JPanel panel;
    private String tipo = "";
    private serverCVInterface server;

    /**
     * Metodo per gestire la connessione al server e impostare la GUI per la registrazione di un nuovo centro vaccinale
     *
     * @throws RemoteException
     */
    public RegCentro() throws RemoteException {
        try {
            Registry reg = LocateRegistry.getRegistry();
            server = (serverCVInterface) reg.lookup("serverCV");
            cenFrame = new JFrame("RegCentro");
            cenFrame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            cenFrame.setPreferredSize(new Dimension(500, 450));
            cenFrame.setResizable(false);
            cenFrame.add(panel);
            cenFrame.pack();
            cenFrame.setLocationRelativeTo(null);
            cenFrame.setVisible(true);
            buttonGroup = new ButtonGroup();
            buttonGroup.add(hubRadioButton);
            buttonGroup.add(aziendaleRadioButton);
            buttonGroup.add(ospedalieroRadioButton);

            registraButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if (nome.getText().trim().equals("") || com.getText().trim().equals("") || qual.getText().trim().equals("") || nc.getText().trim().equals("") || prov.getText().trim().equals("") || ind.getText().trim().equals("") || capT.getText().trim().equals("")
                            || capT.getText().trim().length() != 5 || prov.getText().trim().length() != 2 || (!hubRadioButton.isSelected() && !aziendaleRadioButton.isSelected() && !ospedalieroRadioButton.isSelected()) || !isNumber(capT.getText().trim(), capT.getText().trim().length()))
                        JOptionPane.showMessageDialog(registraButton, "Dati mancanti o errati!");
                    else {
                        if (hubRadioButton.isSelected())
                            tipo = hubRadioButton.getText();
                        else if (aziendaleRadioButton.isSelected())
                            tipo = aziendaleRadioButton.getText();
                        else
                            tipo = ospedalieroRadioButton.getText();
                        try {
                            int cap = Integer.parseInt(capT.getText());
                            if (server.registraCentroVaccinale(nome.getText(), com.getText(), qual.getText(), nc.getText(), prov.getText(), ind.getText(), tipo, cap)) {
                                JOptionPane.showMessageDialog(registraButton, "Centro registrato");
                                cenFrame.setVisible(false);
                            } else
                                JOptionPane.showMessageDialog(registraButton, "Esiste gi√† un centro con questo nome");
                        } catch (RemoteException | SQLException ex) {
                            ex.printStackTrace();
                        }
                    }
                }
            });
        } catch (Exception e) {
            System.out.println("Client err:" + e.getMessage());
            JOptionPane.showMessageDialog(null, "Errore nella connessione o nella lettura dei dati dal server");
            System.exit(1);
        }
    }

    public static boolean isNumber(String str, int l) {
        boolean res = true;
        for (int i = 0; i < l; i++) {
            if (str.charAt(i) >= '0' && str.charAt(i) <= '9') {
                res = true;
            } else {
                res = false;
                break;
            }
        }
        return res;
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(9, 4, new Insets(0, 10, 0, 10), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Nome");
        panel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nome = new JTextField();
        panel.add(nome, new GridConstraints(0, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Comune");
        panel.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Qualificatore (via,piazza,v.le,...)");
        panel.add(label3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Indirizzo");
        panel.add(label4, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setText("Numero Civico");
        panel.add(label5, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label6 = new JLabel();
        label6.setText("Provincia (Sigla)");
        panel.add(label6, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label7 = new JLabel();
        label7.setText("CAP");
        panel.add(label7, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label8 = new JLabel();
        label8.setText("Tipo");
        panel.add(label8, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        com = new JTextField();
        panel.add(com, new GridConstraints(1, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        qual = new JTextField();
        panel.add(qual, new GridConstraints(2, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        ind = new JTextField();
        panel.add(ind, new GridConstraints(3, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        nc = new JTextField();
        panel.add(nc, new GridConstraints(4, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        prov = new JTextField();
        panel.add(prov, new GridConstraints(5, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        capT = new JTextField();
        panel.add(capT, new GridConstraints(6, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        hubRadioButton = new JRadioButton();
        hubRadioButton.setText("Hub");
        panel.add(hubRadioButton, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        aziendaleRadioButton = new JRadioButton();
        aziendaleRadioButton.setText("Aziendale");
        panel.add(aziendaleRadioButton, new GridConstraints(7, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ospedalieroRadioButton = new JRadioButton();
        ospedalieroRadioButton.setText("Ospedaliero");
        panel.add(ospedalieroRadioButton, new GridConstraints(7, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        registraButton = new JButton();
        registraButton.setText("Registra");
        panel.add(registraButton, new GridConstraints(8, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
